openapi: 3.0.1
info:
  title: FoodOrder
  version: v1
paths:
  /api/Food:
    post:
      tags:
        - Food
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFoodDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateFoodDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFoodDTO'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Food
      responses:
        '200':
          description: Success
  /api/Food/{id}:
    get:
      tags:
        - Food
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Food
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Order:
    post:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Order
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /api/Order/{id}:
    get:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Restaurant:
    post:
      tags:
        - Restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestaurantDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRestaurantDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRestaurantDTO'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Restaurant
      responses:
        '200':
          description: Success
  /api/Restaurant/{id}:
    get:
      tags:
        - Restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/User:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
      responses:
        '200':
          description: Success
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
  /api/User/{id}:
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
components:
  schemas:
    CreateFoodDTO:
      required:
        - name
        - price
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: double
      additionalProperties: false
    CreateOrderDto:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        foodId:
          type: integer
          format: int32
        quontity:
          type: integer
          format: int32
      additionalProperties: false
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        foodId:
          type: integer
          format: int32
        quontity:
          type: integer
          format: int32
        orderPrice:
          type: number
          format: double
      additionalProperties: false
    CreateRestaurantDTO:
      required:
        - city
        - country
        - name
        - street
        - streetNumber
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
      additionalProperties: false
    CreateUserDTO:
      required:
        - city
        - country
        - name
        - street
        - streetNumber
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        city:
          type: string
        street:
          type: string
        streetNumber:
          type: string
      additionalProperties: false
